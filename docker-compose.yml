version: '3.9'

networks:
  wordpress:

services:
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: nginx
    depends_on:
      - php
      - mysql
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./wordpress:/var/www/html:delegated
    networks:
      - wordpress


  mysql:
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    container_name: mysql
    environment:
      MYSQL_DATABASE: wpdb
      MYSQL_USER: wpdbuser
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    restart: always
    tty: true
    ports:
      - 3306:3306
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - wordpress


  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php
    volumes:
      - ./wordpress:/var/www/html:delegated
    networks:
      - wordpress


  wp:
    build:
      context: .
      dockerfile: wp.dockerfile
    container_name: wp
    entrypoint: ['wp', '--allow-root']
    links:
      - mysql:mysql
    volumes:
      - ./wordpress:/var/www/html:delegated
    networks:
      - wordpress


  phpmyadmin:
    build:
      context: .
      dockerfile: phpmyadmin.dockerfile
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    depends_on:
      - mysql
    ports: 
      - 8081:80
      - 8082:443
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: secret
    restart: always
    networks:
      - wordpress


  node:
    build:
      context: .
      dockerfile: node.dockerfile
    image: node:12.19.1-alpine3.9
    container_name: nodejs    
    depends_on:
      - nginx
    ports: 
      - 3000:3000
      - 3001:3001
    tty: true
    volumes:
      - ./wordpress:/var/www/html:delegated
      - /usr/local/lib/node_modules/inti-acf-starter/node_modules
    working_dir: /var/www/html/wp-content/themes/inti-acf-starter
    networks:
      - wordpress